//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CF.VRent.Entities.BigFileService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BigFileService.IBigFileService")]
    public interface IBigFileService {
        
        // CODEGEN: Generating message contract since the operation SendEmailWithAttachments is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBigFileService/SendEmailWithAttachments", ReplyAction="http://tempuri.org/IBigFileService/SendEmailWithAttachmentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CF.VRent.Common.Entities.ReturnResult), Action="http://tempuri.org/IBigFileService/SendEmailWithAttachmentsReturnResultFault", Name="ReturnResult", Namespace="http://schemas.datacontract.org/2004/07/CF.VRent.Common.Entities")]
        CF.VRent.Entities.BigFileService.SendEmailWithAttachmentsResponse SendEmailWithAttachments(CF.VRent.Entities.BigFileService.EmailProxyParameter request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EmailProxyParameter", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class EmailProxyParameter {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public CF.VRent.Email.EmailAttachmentEntity Attachment;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public CF.VRent.Email.EmailSender.Entity.EmailParameterEntity ContentParameter;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string[] EmailAddresses;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string EmailType;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string GroupType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream FileStream;
        
        public EmailProxyParameter() {
        }
        
        public EmailProxyParameter(CF.VRent.Email.EmailAttachmentEntity Attachment, CF.VRent.Email.EmailSender.Entity.EmailParameterEntity ContentParameter, string[] EmailAddresses, string EmailType, string GroupType, System.IO.Stream FileStream) {
            this.Attachment = Attachment;
            this.ContentParameter = ContentParameter;
            this.EmailAddresses = EmailAddresses;
            this.EmailType = EmailType;
            this.GroupType = GroupType;
            this.FileStream = FileStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SendEmailWithAttachmentsResponse {
        
        public SendEmailWithAttachmentsResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBigFileServiceChannel : CF.VRent.Entities.BigFileService.IBigFileService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BigFileServiceClient : System.ServiceModel.ClientBase<CF.VRent.Entities.BigFileService.IBigFileService>, CF.VRent.Entities.BigFileService.IBigFileService {
        
        public BigFileServiceClient() {
        }
        
        public BigFileServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BigFileServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BigFileServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BigFileServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CF.VRent.Entities.BigFileService.SendEmailWithAttachmentsResponse CF.VRent.Entities.BigFileService.IBigFileService.SendEmailWithAttachments(CF.VRent.Entities.BigFileService.EmailProxyParameter request) {
            return base.Channel.SendEmailWithAttachments(request);
        }
        
        public void SendEmailWithAttachments(CF.VRent.Email.EmailAttachmentEntity Attachment, CF.VRent.Email.EmailSender.Entity.EmailParameterEntity ContentParameter, string[] EmailAddresses, string EmailType, string GroupType, System.IO.Stream FileStream) {
            CF.VRent.Entities.BigFileService.EmailProxyParameter inValue = new CF.VRent.Entities.BigFileService.EmailProxyParameter();
            inValue.Attachment = Attachment;
            inValue.ContentParameter = ContentParameter;
            inValue.EmailAddresses = EmailAddresses;
            inValue.EmailType = EmailType;
            inValue.GroupType = GroupType;
            inValue.FileStream = FileStream;
            CF.VRent.Entities.BigFileService.SendEmailWithAttachmentsResponse retVal = ((CF.VRent.Entities.BigFileService.IBigFileService)(this)).SendEmailWithAttachments(inValue);
        }
    }
}
